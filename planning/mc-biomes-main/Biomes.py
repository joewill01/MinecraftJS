OCEAN = 0
PLAINS = 1
DESERT = 2
EXTREME_HILLS = 3
FOREST = 4
TAIGA = 5
SWAMPLAND = 6
RIVER = 7
HELL = 8
SKY = 9
FROZEN_OCEAN = 10
FROZEN_RIVER = 11
ICE_PLAINS = 12
ICE_MOUNTAINS = 13
MUSHROOM_ISLAND = 14
MUSHROOM_ISLAND_SHORE = 15
BEACHES = 16
DESERT_HILLS = 17
FOREST_HILLS = 18
TAIGA_HILLS = 19
SMALLER_EXTREME_HILLS = 20
JUNGLE = 21
JUNGLE_HILLS = 22
JUNGLE_EDGE = 23
DEEP_OCEAN = 24
STONE_BEACH = 25
COLD_BEACH = 26
BIRCH_FOREST = 27
BIRCH_FOREST_HILLS = 28
ROOFED_FOREST = 29
TAIGA_COLD = 30
TAIGA_COLD_HILLS = 31
REDWOOD_TAIGA = 32
REDWOOD_TAIGA_HILLS = 33
EXTREME_HILLS_WITH_TREES = 34
SAVANNA = 35
SAVANNA_ROCK = 36
MESA = 37
MESA_ROCK = 38
MESA_CLEAR_ROCK = 39

WARM_BIOMES = [DESERT, DESERT, DESERT, SAVANNA, SAVANNA, PLAINS]
MEDIUM_BIOMES = [FOREST, ROOFED_FOREST, EXTREME_HILLS, PLAINS, BIRCH_FOREST, SWAMPLAND]
COLD_BIOMES = [FOREST, EXTREME_HILLS, TAIGA, PLAINS]
ICE_BIOMES = [ICE_PLAINS, ICE_PLAINS, ICE_PLAINS, TAIGA_COLD]

TEMP = {
    OCEAN: 0.5,
    PLAINS: 0.8,
    DESERT: 2.0,
    EXTREME_HILLS: 0.2,
    FOREST: 0.8,
    TAIGA: 0.2,
    SWAMPLAND: 0.8,
    RIVER: 0.5,
    HELL: 2.0,
    SKY: 0.5,
    FROZEN_OCEAN: 0.0,
    FROZEN_RIVER: 0.0,
    ICE_PLAINS: 0.0,
    ICE_MOUNTAINS: 0.0,
    MUSHROOM_ISLAND: 0.9,
    MUSHROOM_ISLAND_SHORE: 0.9,
    BEACHES: 0.8,
    DESERT_HILLS: 2.0,
    FOREST_HILLS: 0.7,
    TAIGA_HILLS: 0.25,
    SMALLER_EXTREME_HILLS: 0.2,
    JUNGLE: 0.95,
    JUNGLE_HILLS: 0.95,
    JUNGLE_EDGE: 0.95,
    DEEP_OCEAN: 0.5,
    STONE_BEACH: 0.2,
    COLD_BEACH: 0.05,
    BIRCH_FOREST: 0.6,
    BIRCH_FOREST_HILLS: 0.6,
    ROOFED_FOREST: 0.7,
    TAIGA_COLD: -0.5,
    TAIGA_COLD_HILLS: -0.5,
    REDWOOD_TAIGA: 0.3,
    REDWOOD_TAIGA_HILLS: 0.3,
    EXTREME_HILLS_WITH_TREES: 0.2,
    SAVANNA: 1.2,
    SAVANNA_ROCK: 1.0,
    MESA: 2.0,
    MESA_ROCK: 2.0,
    MESA_CLEAR_ROCK: 2.0
}

MUTATIONS = {
    PLAINS: PLAINS,
    DESERT: DESERT,
    EXTREME_HILLS: EXTREME_HILLS,
    FOREST: FOREST,
    TAIGA: TAIGA,
    SWAMPLAND: SWAMPLAND,
    ICE_PLAINS: ICE_PLAINS,
    JUNGLE: JUNGLE,
    JUNGLE_EDGE: JUNGLE_EDGE,
    BIRCH_FOREST: BIRCH_FOREST,
    BIRCH_FOREST_HILLS: BIRCH_FOREST_HILLS,
    ROOFED_FOREST: ROOFED_FOREST,
    TAIGA_COLD: TAIGA_COLD,
    REDWOOD_TAIGA: REDWOOD_TAIGA,
    REDWOOD_TAIGA_HILLS: REDWOOD_TAIGA_HILLS,
    EXTREME_HILLS_WITH_TREES: EXTREME_HILLS_WITH_TREES,
    SAVANNA: SAVANNA,
    SAVANNA_ROCK: SAVANNA_ROCK,
    MESA: MESA,
    MESA_ROCK: MESA_ROCK,
    MESA_CLEAR_ROCK: MESA_CLEAR_ROCK
}

CLASSES = {
    OCEAN: OCEAN,
    PLAINS: PLAINS,
    DESERT: DESERT,
    EXTREME_HILLS: EXTREME_HILLS,
    FOREST: FOREST,
    TAIGA: TAIGA,
    SWAMPLAND: SWAMPLAND,
    RIVER: RIVER,
    HELL: HELL,
    SKY: SKY,
    FROZEN_OCEAN: OCEAN,
    FROZEN_RIVER: RIVER,
    ICE_PLAINS: ICE_PLAINS,
    ICE_MOUNTAINS: ICE_PLAINS,
    MUSHROOM_ISLAND: MUSHROOM_ISLAND,
    MUSHROOM_ISLAND_SHORE: MUSHROOM_ISLAND,
    BEACHES: BEACHES,
    DESERT_HILLS: DESERT,
    FOREST_HILLS: FOREST,
    TAIGA_HILLS: TAIGA,
    SMALLER_EXTREME_HILLS: EXTREME_HILLS,
    JUNGLE: JUNGLE,
    JUNGLE_HILLS: JUNGLE,
    JUNGLE_EDGE: JUNGLE,
    DEEP_OCEAN: OCEAN,
    STONE_BEACH: STONE_BEACH,
    COLD_BEACH: BEACHES,
    BIRCH_FOREST: FOREST,
    BIRCH_FOREST_HILLS: FOREST,
    ROOFED_FOREST: FOREST,
    TAIGA_COLD: TAIGA,
    TAIGA_COLD_HILLS: TAIGA,
    REDWOOD_TAIGA: TAIGA,
    REDWOOD_TAIGA_HILLS: TAIGA,
    EXTREME_HILLS_WITH_TREES: EXTREME_HILLS,
    SAVANNA: SAVANNA,
    SAVANNA_ROCK: SAVANNA,
    MESA: MESA,
    MESA_ROCK: MESA,
    MESA_CLEAR_ROCK: MESA
}

TEMP_COLD = 3
TEMP_MEDIUM = 2
TEMP_WARM = 1


def get_temp_category(biome):
    if biome not in TEMP:
        return TEMP_MEDIUM
    if TEMP[biome] < 0.2:
        return TEMP_COLD
    elif TEMP[biome] < 1.0:
        return TEMP_MEDIUM
    return TEMP_WARM

def is_snowy(biome):
    return biome in {
        FROZEN_OCEAN,
        FROZEN_RIVER,
        ICE_PLAINS,
        ICE_MOUNTAINS,
        COLD_BEACH,
        TAIGA_COLD,
        TAIGA_COLD_HILLS
    }

def get_biome_class(biome):
    return CLASSES[biome] if biome in CLASSES else None

# Don't support mutations yet
def is_mutation(biome):
    return False

def get_mutation_for_biome(biome):
    return MUTATIONS[biome] if biome in MUTATIONS else None
